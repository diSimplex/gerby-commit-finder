diff --git a/plasTeX/Base/LaTeX/Arrays.py b/plasTeX/Base/LaTeX/Arrays.py
index 43c89c0..7b9294d 100644
--- a/plasTeX/Base/LaTeX/Arrays.py
+++ b/plasTeX/Base/LaTeX/Arrays.py
@@ -19,7 +19,7 @@ class ColumnType(Macro):
         self.style.update(self.columnAttributes)
 
     @classmethod
-    def new(cls, name, attributes, args='', 
+    def new(cls, name, attributes, args='',
             before=None, after=None, between=None):
         """
         Generate a new column type definition
@@ -36,8 +36,8 @@ class ColumnType(Macro):
         """
         newclass = type(name, (cls,),
             {'columnAttributes':attributes, 'args':args,
-             'before': before or [], 
-             'after': after or [], 
+             'before': before or [],
+             'after': after or [],
              'between': between or []})
         cls.columnTypes[name] = newclass
 
@@ -92,7 +92,7 @@ class Array(Environment):
     class EndRow(Command):
         """ End of a row """
         macroName = '\\'
-        args = '* [ space ]'
+        args = '[ ! space ]'
 
         def invoke(self, tex):
             # Pop and push a new context for each row, this keeps
