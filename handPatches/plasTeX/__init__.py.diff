--- a/plasTeX/__init__.py	2024-03-05 11:32:41.718772385 +0000
+++ b/plasTeX/__init__.py	2024-03-05 12:01:00.019048730 +0000
@@ -152,6 +152,9 @@
     # So we set the catcode to ensure correct behaviour.
     catcode = 0
 
+    # Whether or not to perform character substitutions
+    doCharSubs = True
+
     def persist(self, attrs=None):
         """
         Store attributes needed for cross-document links
@@ -474,6 +477,7 @@
             return
 
         self.argSource = ''
+        self.argSources = {}
         arg = None
         try:
             for arg in self.arguments:
@@ -481,6 +485,7 @@
                 output, source = tex.readArgumentAndSource(parentNode=self,
                                                            name=arg.name,
                                                            **arg.options)
+                self.argSources[arg.name] = source
                 self.argSource += source
                 self.attributes[arg.name] = output
                 self.postArgument(arg, output, tex)
@@ -623,6 +628,10 @@
                 macroargs.append(Argument('*modifier*', index, {'spec':item}))
                 index += 1
 
+            # Do not strip leading whitespace
+            elif item in '!':
+                argdict['stripLeadingWhitespace'] = False
+
             # Optional equals
             elif item in '=':
                 argdict.clear()
@@ -790,6 +799,12 @@
                 elif len(item) == 1 and item[0].isElementContentWhitespace:
                     self.pop(i)
 
+    def normalize(self,charsubs=None):
+        if self.doCharSubs:
+            super(Macro,self).normalize(self.ownerDocument.charsubs)
+        else:
+            super(Macro,self).normalize()
+
 class TeXFragment(DocumentFragment):
     """ Document fragment node """
     @property

